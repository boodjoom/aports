# Maintainer: Natanael Copa <ncopa@alpinelinux.org>

_flavor=ecp
pkgname=linux-${_flavor}
pkgver=5.10.16
case $pkgver in
	*.*.*)	_kernver=${pkgver%.*};;
	*.*) _kernver=$pkgver;;
esac
pkgrel=0
pkgdesc="Linux lts kernel for ECP"
url="https://www.kernel.org"
depends="mkinitfs"
_depends_dev="perl gmp-dev elfutils-dev bash flex bison"
makedepends="$_depends_dev sed installkernel bc linux-headers linux-firmware-any openssl-dev
	diffutils findutils"
options="!strip"
_config=${config:-config-ecp.${CARCH}}
install=
source="https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/linux-$_kernver.tar.xz

	config-ecp.armv7

	tq-imx6ul.dtsi
	tq-imx6ul-mba6ul-lcdif.dtsi
	tq-imx6ul-mba6ul-lvds.dtsi
	tq-imx6ul-mba6ulx.dts
	tq-imx6ul-mba6ulx-lvds.dts
	tq-imx6ul-tqma6ulx.dtsi
	tq-mba6ul-common.dtsi
	tq-tqma6ul-common.dtsi
	tq-tqma6ulx-common.dtsi
	"
subpackages="$pkgname-dev:_dev:$CBUILD_ARCH"
_flavors=
for _i in $source; do
	case $_i in
	config-*.$CARCH)
		_f=${_i%.$CARCH}
		_f=${_f#config-}
		_flavors="$_flavors ${_f}"
		if [ "linux-$_f" != "$pkgname" ]; then
			subpackages="$subpackages linux-${_f}::$CBUILD_ARCH linux-${_f}-dev:_dev:$CBUILD_ARCH"
		fi
		;;
	esac
done

if [ "${pkgver%.0}" = "$pkgver" ]; then
	source="$source
	https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/patch-$pkgver.xz"
fi
arch="armv7"
license="GPL-2.0"

_carch=${CARCH}
case "$_carch" in
arm*) _carch="arm" ;;
esac

prepare() {
	local _patch_failed=
	cd "$srcdir"/linux-$_kernver
	if [ "$_kernver" != "$pkgver" ]; then
		msg "Applying patch-$pkgver.xz"
		unxz -c < "$srcdir"/patch-$pkgver.xz | patch -p1 -N
	fi

	# first apply patches in specified order
	for i in $source; do
		case $i in
		*.patch)
			msg "Applying $i..."
			if ! patch -s -p1 -N -i "$srcdir"/$i; then
				echo $i >>failed
				_patch_failed=1
			fi
			;;
		esac
	done

	if ! [ -z "$_patch_failed" ]; then
		error "The following patches failed:"
		cat failed
		return 1
	fi

	# remove localversion from patch if any
	rm -f localversion*
	_olddefconfig

	# remove dts files and copy ours
	rm -f "$srcdir"/linux-$_kernver/arch/"$_carch"/boot/dts/*.dts
	rm -f "$srcdir"/linux-$_kernver/arch/"$_carch"/boot/dts/*.dtsi
	for i in $source; do
		case $i in
		*.dts|*.dtsi)
			msg "Copying $i..."
			cp "$srcdir"/${i} "$srcdir"/linux-$_kernver/arch/"$_carch"/boot/dts
			;;
		esac
	done
}

_olddefconfig() {
	for i in $_flavors; do
		local _config=config-$i.${CARCH}
		local _builddir="$srcdir"/build-$i.$CARCH
		mkdir -p "$_builddir"
		echo "-$pkgrel-$i" > "$_builddir"/localversion-alpine \
			|| return 1

		cp "$srcdir"/$_config "$_builddir"/.config
		make -C "$srcdir"/linux-$_kernver \
			O="$_builddir" \
			ARCH="$_carch" \
			olddefconfig
	done
}

oldconfig() {
	for i in $_flavors; do
		local _config=config-$i.${CARCH}
		local _builddir="$srcdir"/build-$i.$CARCH
		mkdir -p "$_builddir"
		echo "-$pkgrel-$i" > "$_builddir"/localversion-alpine \
			|| return 1

		cp "$srcdir"/$_config "$_builddir"/.config
		make -C "$srcdir"/linux-$_kernver \
			O="$_builddir" \
			ARCH="$_carch" \
			listnewconfig oldconfig
	done
}

build() {
	unset LDFLAGS
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
	for i in $_flavors; do
		cd "$srcdir"/build-$i.$CARCH
		make ARCH="$_carch" CC="${CC:-gcc}" \
			KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-Alpine"
	done
}

_package() {
	local _buildflavor="$1" _outdir="$2"
	local _abi_release=${pkgver}-${pkgrel}-${_buildflavor}
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

	cd "$srcdir"/build-$_buildflavor.$CARCH
	# modules_install seems to regenerate a defect Modules.symvers on s390x. Work
	# around it by backing it up and restore it after modules_install
	cp Module.symvers Module.symvers.backup

	mkdir -p "$_outdir"/boot "$_outdir"/lib/modules

	local _install
	case "$CARCH" in
		arm*|aarch64) _install="zinstall dtbs_install";;
		*) _install=install;;
	esac

	make -j1 modules_install $_install \
		ARCH="$_carch" \
		INSTALL_MOD_PATH="$_outdir" \
		INSTALL_PATH="$_outdir"/boot \
		INSTALL_DTBS_PATH="$_outdir/boot/dtbs-$_buildflavor"

	cp Module.symvers.backup Module.symvers

	rm -f "$_outdir"/lib/modules/${_abi_release}/build \
		"$_outdir"/lib/modules/${_abi_release}/source
	rm -rf "$_outdir"/lib/firmware

	install -D include/config/kernel.release \
		"$_outdir"/usr/share/kernel/$_buildflavor/kernel.release
}

# main flavor installs in $pkgdir
package() {
	depends="$depends linux-firmware-any"

	_package ecp "$pkgdir"
}

_dev() {
	local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-dev$)//g')
	local _abi_release=${pkgver}-${pkgrel}-$_flavor
	# copy the only the parts that we really need for build 3rd party
	# kernel modules and install those as /usr/src/linux-headers,
	# simlar to what ubuntu does
	#
	# this way you dont need to install the 300-400 kernel sources to
	# build a tiny kernel module
	#
	pkgdesc="Headers and script for third party modules for $_flavor kernel"
	depends="$_depends_dev"
	local dir="$subpkgdir"/usr/src/linux-headers-${_abi_release}
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

	# first we import config, run prepare to set up for building
	# external modules, and create the scripts
	mkdir -p "$dir"
	cp "$srcdir"/config-$_flavor.${CARCH} "$dir"/.config
	echo "-$pkgrel-$_flavor" > "$dir"/localversion-alpine

	make -j1 -C "$srcdir"/linux-$_kernver O="$dir" ARCH="$_carch" \
		syncconfig prepare modules_prepare scripts

	# remove the stuff that points to real sources. we want 3rd party
	# modules to believe this is the soruces
	rm "$dir"/Makefile "$dir"/source

	# copy the needed stuff from real sources
	#
	# this is taken from ubuntu kernel build script
	# http://kernel.ubuntu.com/git/ubuntu/ubuntu-zesty.git/tree/debian/rules.d/3-binary-indep.mk
	cd "$srcdir"/linux-$_kernver
	find .  -path './include/*' -prune \
		-o -path './scripts/*' -prune -o -type f \
		\( -name 'Makefile*' -o -name 'Kconfig*' -o -name 'Kbuild*' -o \
		   -name '*.sh' -o -name '*.pl' -o -name '*.lds' -o -name 'Platform' \) \
		-print | cpio -pdm "$dir"

	cp -a scripts include "$dir"

	find $(find arch -name include -type d -print) -type f \
		| cpio -pdm "$dir"

	install -Dm644 "$srcdir"/build-$_flavor.$CARCH/Module.symvers \
		"$dir"/Module.symvers

	mkdir -p "$subpkgdir"/lib/modules/${_abi_release}
	ln -sf /usr/src/linux-headers-${_abi_release} \
		"$subpkgdir"/lib/modules/${_abi_release}/build
}

sha512sums="95bc137d0cf9148da6a9d1f1a878698dc27b40f68e22c597544010a6c591ce1b256f083489d3ff45ff77753289b535135590194d88ef9f007d0ddab3d74de70e  linux-5.10.tar.xz
e6e6ce2fa157b67d2553e1489fe9c9b7fd110a8a516b54f5b656de2e2f8c61e6319c0d6921fe58951e1ecdf0134c83d12e4e6d503395739a97c34e180fb05885  config-ecp.armv7
d5930f9b7c5eb421b471022c59454371c6be28792f33373104794559c98bdcb7d04f7fcb9349b4f475f495850432f6645a778860d18f609d65a5592334ed8fb7  tq-imx6ul.dtsi
2ec82a97d93378c0af5a43a1c138303e66b4e77f5412f852bed76af5520213d6a347279e443aefde5bc6cf68827a2f79fb26a13abd02771e1b030abff67832c6  tq-imx6ul-mba6ul-lcdif.dtsi
bbf0891d7406c873e21bac210e670d9fb8b69489c097723efbafe07acaebd9817c6bc0f1b3d30863bc47d70d63ef3c9ce67119d53aa96cb7b3563d91e296bdf5  tq-imx6ul-mba6ul-lvds.dtsi
3bdaf1c703a1afc2f25b4560949161909f95f0886e5a5f2f340f7df21f27a71c080222a34b3b9db2ea187613d4b0feddb0d2609b39d667b87df3beab11d7f7a5  tq-imx6ul-mba6ulx.dts
40be37fc92925651c2415b2790d6d04e80df79db0df2e908d043abe27337959339c0445aa9a1b3c3007d205c818b743704cdab3d321e976326ffd2d565d27ee7  tq-imx6ul-mba6ulx-lvds.dts
6aebacd3d8917af65199239fd3f224894420c63dba6a1b85493c28fc50b951a79252d8f83e26be200cae44aff0eb6d891ffe874fbdf03ddee6c8deed9a9a39bc  tq-imx6ul-tqma6ulx.dtsi
8fa895e0347fcb377053a77cd0bb4999161454c572b2cbd99a182419da871e19be159afd8ee5bcaaa1e68478f51faaad8b7f6bac21deead162de1971d18e29c8  tq-mba6ul-common.dtsi
1425b1ee30510f0c238c1fd2e40cd006609ecd0b1d01050df193cb75b1515e491083a0b1bd0528103a07098444d63f26ed825f78e9e5225a4bf424db546ba24b  tq-tqma6ul-common.dtsi
d7b6166c0341d1fd330b939e930a4e9bfdf10432844da7d51111e4fcbe2e641737c0f98066f77771e04f4ec5e2e5843718a2075adabd63f7bcebc375ca9c7140  tq-tqma6ulx-common.dtsi
be9cfe1ae6697956ca7476cedc212a8cbd9da2c3c72096a89afaaf73c5b6655fd04d458f96c472f680c5513c0ea3e4449c4092a958425b6040f0c7774453cd2f  patch-5.10.16.xz"
